PREFACE

  This document explains how to install problems for PACTF 2016 on a server.

  Lines beginning with '#' denote commands run with a root prompt.
  Lines beginning with '$' denote commands run with a non-root shell.
  (The user should be clear from context.)
  Line surrounded with angle brackets denote human instructions.
  (They are for you to interpret, not to type in.)
  Curly braces denote variables you have to fill in for yourself.

  Sometimes I will ask you to copy a file or some files.
  You can find them in appropriately named directories that live alongside
  this instructions file that you are reading right now.

  Sometimes problems will need an IP do bind to.
  Just note that if you supply a public IP (as you should),
  then trying to connect as a client on the server itself to 127.0.0.1 won't work.

  You don't need to put all the problems on the same server.
  However, do follow the server prep instructions on all servers.
  Do put Heartbroken on its own server.

  Good luck,
  Yatharth <yatharth999@gmail.com>

PREP SERVER

  $ sudo su -
  # groupadd probs
  # apt-get install python3-pip supervisor htop


ROUND 1 : RSA2 / PHILLIPS DECRYPTION SERVICE

  # pip3 install pycrypto

  # adduser rsa2
  <enter YR5bMrJgJGVCyLPP4nBSCMfd at the password prompts>
  # usermod -a -G probs rsa2
  <copy rsa2 files into the home folder>
  # chown rsa2:probs /home/rsa2/*

  # echo {ip} > /home/rsa2/ip
  # echo {port} > /home/rsa2/port

  # su - rsa2
  $ python3 server.py
  <test that problem is working>
  $ exit

  # ln -s /home/rsa2/rsa2.supervisor.conf /etc/supervisor/conf.d/
  # supervisorctl reread
  # supervisorctl update
  <test that problem is working>

  <take a break>

ROUND 2 : OXYGEN / COALMINE

  # adduser oxygen
  <enter YR5bMrJgJGVCyLPP4nBSCMfd at the password prompts>
  # usermod -a -G probs oxygen
  <copy oxygen files into the home folder>
  # chown oxygen:probs /home/oxygen/*

  # echo {ip} > /home/oxygen/ip
  # echo {port} > /home/oxygen/port

  # su - oxygen
  $ python3 ncserver.py /home/oxygen/oxygen
  <test that problem is working>
  $ exit

  # ln -s /home/oxygen/oxygen.supervisor.conf /etc/supervisor/conf.d/
  # supervisorctl reread
  # supervisorctl update
  <test that problem is working>

ROUND 2 : RANDOMGAME / GUESSING GAME

  # apt-get install openjdk-7-jre

  # adduser randomgame
  <enter YR5bMrJgJGVCyLPP4nBSCMfd at the password prompts>
  # usermod -a -G probs randomgame
  <copy randomgame files into the home folder>
  # chown randomgame:probs /home/randomgame/*

  # echo {ip} > /home/randomgame/ip
  # echo {port} > /home/randomgame/port

  # su - randomgame
  $ python3 ncserver.py java RandomGame
  <test that problem is working>
  $ exit

  # ln -s /home/randomgame/randomgame.supervisor.conf /etc/supervisor/conf.d/
  # supervisorctl reread
  # supervisorctl update
  <test that problem is working>

ROUND 2 : PASSWORD GAME / SLIDING LETTER GAME

  # adduser passwordgame
  <enter YR5bMrJgJGVCyLPP4nBSCMfd at the password prompts>
  # usermod -a -G probs passwordgame
  <copy passwordgame files into the home folder>
  # chown passwordgame:probs /home/passwordgame/*

  # echo {ip} > /home/passwordgame/ip
  # echo {port} > /home/passwordgame/port

  # su - passwordgame
  $ python3 ncserver.py /home/passwordgame/passwordgame
  <test that problem is working>
  $ exit

  # ln -s /home/passwordgame/passwordgame.supervisor.conf /etc/supervisor/conf.d/
  # supervisorctl reread
  # supervisorctl update
  <test that problem is working>

ROUND 3 : INJECTIONS / ES KYUU ELL + THE SEQUEL

  # apt-get install nginx php5-common php5-cli php5-fpm php5-mysql

  <copy the contents of the directory 'www' in the injections files into /var/www/>
  <copy the file 'injections_nginx' in the injections files into /etc/nginx/sites-available>

  # ln -s /etc/nginx/sites-available/injections_nginx /etc/nginx/sites-enabled/
  # rm /etc/nginx/sites-enabled/default
  # nginx -t
  # service nginx reload
  # service php5-fpm restart
  <check if website works at / and /Injection1, noting that PHP doesn't work rn>

  # apt-get install mysql-server
  <enter ctvFzsOcRBvz0ZACAMpqzWWB at the password prompt>
  <copy the files 'Injection1.sql' and 'Injection2.sql' to /root>
  # mysql -u root -p
  $ create user 'Injection1'@'localhost' identified by 'injection1';
  $ create user 'Injection2'@'localhost' identified by 'injection2';
  $ create database Injection1;
  $ create database Injection2;
  $ grant select on Injection1.* to 'Injection1';
  $ grant select on Injection2.* to 'Injection2';
  $ flush privileges;
  $ exit
  # mysql -u root -p Injection1 < /root/Injection1.sql
  # mysql -u root -p Injection2 < /root/Injection2.sql

  # service nginx reload
  <check if website fully works at / and /Injection1>

ROUND 3 : UNAUTHORIZED ACCESS / LURKING IN PLAIN SIGHT

  # apt-get install nginx
  <copy the file 'default' in the recon files into /etc/nginx/sites-available>
  <copy/overwrite the contents of the directory 'html' in the recon files into /usr/share/nginx/html/>
  # service nginx restart

ROUND 3 : HEARTBROKEN

  <wait for Tony to fill this in>
